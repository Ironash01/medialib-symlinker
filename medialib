#!/bin/bash

config_home="$HOME/.config/medialib"

if [ -d "$config_home" ] ; then
	:
else
	mkdir "$config_home"
fi

runtime_config="$HOME/.config/medialib/medialibrc"
source "$runtime_config"
tv_source="$HOME/.config/medialib/.tv-source"
mov_source="$HOME/.config/medialib/.mov-source"
exclude_dirs="$HOME/.config/medialib/.exclude"

tv-check_sources() {

	if [ -f "tv_source" ] ; then
		:
	else
		touch "$tv_source"
	fi
	if [ "$(wc -l  $tv_source)" == 0 ] ; then
			echo "Sources are empty"
		else
			count_tv_source=$(wc -l < "$tv_source")
			for ((c=1; c<=count_tv_source; c+=1)); do
					current_source=$(head -n "$c" "$tv_source" | tail -n 1)
				if [ -d "$current_source" ] ; then
					echo "Success checking: $current_source"
				else
					echo "Directories do not exists, reconfigure them"
				fi
			done
	fi

}

select_mode() {

	if [ "$identify_mode" == tv ] ; then
			sed -i "s|current_mode=$current_mode|current_mode=tv|" "$runtime_config"
	elif [ "$identify_mode" == mov ]; then
			sed -i "s|current_mode=$current_mode|current_mode=mov|" "$runtime_config"
	else
			echo 'Invalid mode'
			exit 1
	fi

}

tv-select_config() {

	selected_config="$config_home/tv-$config_name"
	if [ -f "$selected_config" ] ; then
		sed -i "s|tv_active=$tv_active|tv_active=$selected_config|" "$runtime_config"
	else
		echo 'Config does not exist.'
	fi

}

tv-create_config() {

	if [ -d "$config_home" ]; then
		touch "$config_home/tv-$config_name"
	else
		mkdir "$config_home"
		touch "$config_home/tv-$config_name"
	fi
	tv-select_config

}

tv-list_config() {

	echo -e "Available configuration for tv mode:\n 	$(ls "$config_home" | grep -e 'tv')"

}

tv-active_config() {

	echo "Current config: $tv_active"

}

tv-write_config() {

	count_tv_source=$(wc -l < "$tv_source")
	for ((count=1; count<=count_tv_source; count+=1)); do
		current_source=$(head -n "$count" "$tv_source" | tail -n 1)
		for file in "$current_source"/* ; do
			tmdb="Enter show name here"
			season_timer=20
			for ((season_number=1; season_number<=season_timer; season_number+=1)); do
				if [ -d "$file/Season $season_number" ]  ; then
					filter_source=$(grep "$file/Season $season_number" "$tv_active")
					#echo "$filter_source"
					if [ "$file/Season $season_number" == "$filter_source" ] ; then
						echo 'Already in the config'
					else
						echo "$file/Season $season_number" >> "$tv_active"
						echo "$season_number" >> "$tv_active"
						echo "$tmdb" >> "$tv_active"
					fi
				elif [ -d "$file/Season_$season_number" ] ; then
					filter_source=$(grep "$file/Season_$season_number" "$tv_active")
					#echo "$filter_source"
					if [ "$file/Season_$season_number" == "$filter_source" ] ; then
						echo 'Already in the config'
					else
						echo "$file/Season_$season_number" >> "$tv_active"
						echo "$season_number" >> "$tv_active"
						echo "$tmdb" >> "$tv_active"
					fi
				else
					:
				fi
		done
			find "$file" -maxdepth 1 -type f -name '*.mkv' -print -quit | while read -r basefile ; do
				filter_source=$(grep -F "$file" "$tv_active")
				#echo "$filter_source"
				if [ "$file" == "$filter_source" ]; then
					echo 'Already in the config'
				else
					echo "$file" >> "$tv_active"
					echo "Enter season number" >> "$tv_active"
					echo "$tmdb" >> "$tv_active"
				fi
			done
		done
	done

}

tv-add_source() {

	if [ -d "$add_source" ]; then
		sed -i '1{s/^[[:space:]]*//; /^$/d;}' "$tv_source" && echo "$add_source" >> "$tv_source"
	else
		echo 'Directory does not exist'
	fi

}

tv-remove_source() {

	sed -i "s|${remove_source}||" "$tv_source"

}

tv-exclude_config() {

	count_config=$(wc -l < "$tv_active")
	for((i=1; i<=count_config; i+=3)); do
			current_dir=$(head -n "$i" "$tv_active"| tail -n 1)
		if [ "$current_dir" == "$(grep -e "$current_dir" "$exclude_dirs")" ]; then
			:
		else
			echo "$current_dir" >> "$exclude_dirs"
		fi
	done

}

mov-create_config() {

	:

}

help() {

	echo Usage: medialib [OPTIONS]
	echo
	echo Options:
	echo '	-h			Print this help and exit.'
	echo '	-c <config>		Create a config file and select it.'
	echo '	-l			List available configs'
	echo '	-s <config>		Select a configuration file'
	echo '	-p			Print current config'
	echo '	-T			Test Directories in config'
	echo '	-w			Write to current config file using source-config'
	echo '	-u			update configs if exclude exists, obey them'
	echo '	-U			Update without exlusion'
	echo '	-C,			Create symlinks with values defined from config'
	echo '	-r			Rename symlinked media files'
	echo '	-R			Rename but ignore custom-rename'
	echo -e '	-m <config1> <config2> -t <merged> \n				Merges config files'
	echo '	-e <config>		Add directories defined in config so -w will not append them'
	echo '	-a			Equivalent of -TCr'
	echo '	-f <directory>		Add Parent source'
	echo '	-F <directory>		Remove Parent source'
	echo '	-i	<tv/mov>	Set library mode'
	echo '	-ip			Print current library mode'
}


while getopts 'hlpTws:i:c:f:F:e' OPTION; do
	case "$OPTION" in
		h)
			help
			;;
		c)
			config_name="$OPTARG"
			if [ "$current_mode" == tv ]; then
				tv-create_config
			elif [ "$current_mode" == mov ]; then
				mov-create_config
			else
				echo 'Invalid mode run medialib -i <mode>'
			fi
			;;
		s)
			config_name="$OPTARG"
			if [ "$current_mode" == tv ]; then
				tv-select_config
			elif [ "$current_mode" == mov ]; then
				mov-select_config
			else
				echo 'Invalid mode run medialib -i <mode>'
			fi
			;;
		i)
			identify_mode="$OPTARG"
			select_mode
			;;
		p)
			if [ "$current_mode" == tv ]; then
				tv-active_config
			elif [ "$current_mode" == mov ]; then
				mov-active_config
			else
				echo 'Invalid mode run medialib -i <mode>'
			fi
			;;
		l)
			if [ "$current_mode" == tv ]; then
				tv-list_config
			elif [ "$current_mode" == mov ]; then
				mov-list_config
			else
				echo 'Invalid mode run medialib -i <mode>'
			fi
			;;
		T)
			if [ "$current_mode" == tv ]; then
				tv-check_sources
			elif [ "$current_mode" == mov ]; then
				mov-check_sources
			else
				echo 'Invalid mode run medialib -i <mode>'
			fi
			;;
		f)
			add_source="$OPTARG"
			if [ "$current_mode" == tv ]; then
				tv-add_source
			elif [ "$current_mode" == mov ]; then
				mov-add_source
			else
				echo 'Invalid mode run medialib -i <mode>'
			fi
			;;
		F)
			remove_source="$OPTARG"
			if [ "$current_mode" == tv ]; then
				tv-remove_source
			elif [ "$current_mode" == mov ]; then
				mov-remove_source
			else
				echo 'Invalid mode run medialib -i <mode>'
			fi
			;;
		w)
			if [ "$current_mode" == tv ]; then
				tv-write_config
			elif [ "$current_mode" == mov ]; then
				mov-write_config
			else
				echo 'Invalid mode run medialib -i <mode>'
			fi
			;;
		e)
			if [ "$current_mode" == tv ]; then
				tv-exclude_config
			elif [ "$current_mode" == mov ]; then
				mov-exclude_config
			else
				echo 'Invalid mode run medialib -i <mode>'
			fi
			;;
		?)
			echo "Script usage: Work in progress." >&2
			exit 1
			;;
	esac
done
shift "$(($OPTIND -1))"
